// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DNoteUtils findClosestParent, parent grandchild -> domain root: main 1`] = `
Object {
  "body": "",
  "children": Array [],
  "custom": Object {},
  "data": Object {},
  "desc": "",
  "fname": "baz",
  "parent": "root",
  "stub": false,
  "title": "baz",
  "type": "note",
}
`;

exports[`DNoteUtils findClosestParent, parent grandchild -> parent: main 1`] = `
Object {
  "body": "",
  "children": Array [
    "alpha",
  ],
  "custom": Object {},
  "data": Object {},
  "desc": "",
  "fname": "foo.one",
  "parent": "foo",
  "stub": false,
  "title": "one",
  "type": "note",
}
`;

exports[`DNoteUtils findClosestParent, parent grandchild -> root: main 1`] = `
Object {
  "body": "",
  "children": Array [
    "foo",
  ],
  "custom": Object {},
  "data": Object {},
  "desc": "",
  "fname": "root",
  "parent": "root",
  "stub": false,
  "title": "root",
  "type": "note",
}
`;

exports[`NoteUtils createStubNotes, root -> bar.one: barChild 1`] = `
Array [
  Object {
    "body": "",
    "children": Array [
      "alpha",
    ],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "bar.one",
    "parent": "bar",
    "stub": false,
    "title": "one",
    "type": "note",
  },
  Object {
    "body": "",
    "children": Array [],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "bar.one.alpha",
    "parent": "one",
    "stub": false,
    "title": "alpha",
    "type": "note",
  },
]
`;

exports[`Schema domainRoot at child: fooChild_body 1`] = `
"\`\`\`
-
    id: one
    title: yml
    desc: \\"\\"
    children: [alpha]
    parent: foo
    data: {}
    fname: foo.schema.yml
-
    id: alpha
    title: yml
    desc: \\"\\"
    children: []
    parent: one
    data: {}
    fname: foo.schema.yml

\`\`\`"
`;

exports[`Schema domainRoot at root: foo_body 1`] = `
"\`\`\`
-
    id: foo
    title: yml
    desc: \\"\\"
    children: [one]
    parent: root
    data: {}
    fname: foo.schema.yml
-
    id: one
    title: yml
    desc: \\"\\"
    children: [alpha]
    parent: foo
    data: {}
    fname: foo.schema.yml
-
    id: alpha
    title: yml
    desc: \\"\\"
    children: []
    parent: one
    data: {}
    fname: foo.schema.yml

\`\`\`"
`;

exports[`SchemaUtils note matchDomain: schemas 1`] = `
Array [
  Object {
    "body": "",
    "children": Array [
      "yml",
    ],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "foo.schema.yml",
    "parent": "root",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [
      "yml",
    ],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "foo.schema.yml",
    "parent": "yml",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "foo.schema.yml",
    "parent": "yml",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [
      "yml",
    ],
    "custom": Object {},
    "data": Object {
      "namespace": true,
    },
    "desc": "",
    "fname": "bar.schema.yml",
    "parent": "root",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [],
    "custom": Object {},
    "data": Object {
      "namespace": true,
    },
    "desc": "",
    "fname": "bar.schema.yml",
    "parent": "yml",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
]
`;

exports[`SchemaUtils string node: domain: schemas 1`] = `
Array [
  Object {
    "body": "",
    "children": Array [
      "yml",
    ],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "foo.schema.yml",
    "parent": "root",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [
      "yml",
    ],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "foo.schema.yml",
    "parent": "yml",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [],
    "custom": Object {},
    "data": Object {},
    "desc": "",
    "fname": "foo.schema.yml",
    "parent": "yml",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [
      "yml",
    ],
    "custom": Object {},
    "data": Object {
      "namespace": true,
    },
    "desc": "",
    "fname": "bar.schema.yml",
    "parent": "root",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
  Object {
    "body": "",
    "children": Array [],
    "custom": Object {},
    "data": Object {
      "namespace": true,
    },
    "desc": "",
    "fname": "bar.schema.yml",
    "parent": "yml",
    "stub": false,
    "title": "yml",
    "type": "schema",
  },
]
`;
